<?xml version="1.0" ?>
<project name="MySqlPackage" default="all" xmlns="http://nant.sf.net/schemas/nant-0.85.win32.net-1.0.xsd">
	<description>Package script for MySQLClient Managed Provider for MySQL</description>

	<include buildfile="Client.build"/>

	<!-- first remove all previous packages -->
	<delete dir="packages" failonerror="false"/>
	<mkdir dir="packages"/>

	<target name="full">
		<!-- first make sure our product actually builds -->
<!--		<nant buildfile="client.build" target="allframeworks"/>-->
		<!-- Now build the docs -->
		<exec program="sandcastlebuilderconsole.exe" commandline="help.shfb" failonerror="true" workingdir="Documentation"/>
		<call target="all"/>
	</target>

	<!-- construct our version id from the assembly version -->
	<property name="version" value="${assemblyname::get-version(assemblyname::get-assembly-name('mysql.data/provider/bin/net-2.0/release/mysql.data.dll'))}"/>
	<if test="${string::ends-with(version, '0')}">
		<property name="version" value="${string::substring(version, 0, string::last-index-of(version, '.'))}"/>
	</if>


	<!-- packaging targets -->
	<target name="all" depends="GPL, Commercial">
		<checksum algorithm="MD5" fileext="MD5">
			<fileset>
				<include name="packages/**/*.exe"/>
				<include name="packages/**/*.zip"/>
			</fileset>
		</checksum>
	</target>
	
	<!-- Commercial package target -->
	<target name="Commercial">
		<mkdir dir="packages/Commercial"/>
		<property name="IsGPL" value="false"/>
		<property name="postfix" value="-com"/>
		<call target="package"/>

		<move todir="packages/Commercial">
			<fileset basedir="packages"><include name="*.*"/></fileset>
		</move>
	</target>

	<!-- GPL package target -->
	<target name="GPL">
		<mkdir dir="packages/GPL"/>
		<mkdir dir="packages/snapshots"/>

		<property name="IsGPL" value="true"/>
		<property name="postfix" value="" />
		<call target="package"/>

		<copy todir="packages/GPL">
			<fileset basedir="packages"><include name="*.*"/></fileset>
		</copy>
		<move todir="packages/snapshots">
			<fileset basedir="packages\"><include name="*.*"/></fileset>
		</move>

		<!-- now rename the snapshot builds to include date -->
		<move file="packages/snapshots/mysql-connector-net-${version}.zip" 
		      tofile="packages/snapshots/mysql-connector-net-${version}-${datetime::get-year(datetime::now())}${string::pad-left(int::to-string(datetime::get-month(datetime::now())), 2, '0')}${string::pad-left(int::to-string(datetime::get-day(datetime::now())), 2, '0')}.zip" />
		<move file="packages/snapshots/mysql-connector-net-${version}-src.zip" 
		      tofile="packages/snapshots/mysql-connector-net-${version}-${datetime::get-year(datetime::now())}${string::pad-left(int::to-string(datetime::get-month(datetime::now())), 2, '0')}${string::pad-left(int::to-string(datetime::get-day(datetime::now())), 2, '0')}-src.zip" />
		<move file="packages/snapshots/mysql-connector-net-${version}-noinstall.zip" 
		      tofile="packages/snapshots/mysql-connector-net-${version}-${datetime::get-year(datetime::now())}${string::pad-left(int::to-string(datetime::get-month(datetime::now())), 2, '0')}${string::pad-left(int::to-string(datetime::get-day(datetime::now())), 2, '0')}-noinstall.zip" />

	</target>

	<target name="package" description="Package target for a single edition"
				depends="PackageInstall, PackageSource, PackageZip"/>

	<target name="PackageInstall">
		<exec workingdir="Installer" program="candle"
			  commandline="-ext WixNetFxExtension -ext WixUtilExtension -dIsGPL=${IsGPL} -dVersion=${version} -dbuild=release main.wxs samples.wxs visualstudio.wxs webproviders.wxs ui.wxs cf.wxs core.wxs"/>
		<exec workingdir="Installer" program="light"
                      commandline="-sval -ext WixNetFxExtension -ext WixUIExtension -ext WixUtilExtension -cultures:en-us main.wixobj samples.wixobj visualstudio.wixobj webproviders.wixobj ui.wixobj cf.wixobj core.wixobj -out MySql.Data.msi"/>

		<zip zipfile="packages/mysql-connector-net-${version}${postfix}.zip">
			<fileset basedir="Installer">			
				<include name="mysql.data.msi"/>
			</fileset>
		</zip>
    	</target>

	<target name="PackageSource">
		<delete dir="tmp" failonerror="false"/>
		<mkdir dir="tmp"/>	
		<copy todir="tmp">
			<fileset>
				<exclude name="**/bin/**"/>
				<exclude name="**/obj/**"/>
				<exclude name="**/packages/**"/>
				<exclude name="**/output/**"/>
				<exclude name="**/cnet.snk"/>
				<exclude name="**/*.user"/>
				<exclude name="**/*.suo"/>
				<exclude name="**/doc.xml"/>
				<exclude name="Design/**"/>
				<exclude name="*-banner.txt"/>
				<exclude name="COPYING" unless="${IsGPL}"/>
				<exclude name="EXCEPTIONS" unless="${IsGPL}"/>
				<exclude name="License.txt" if="${IsGPL}"/>
				<exclude name="*.Design.*"/>
				<exclude name="**/*.wixobj"/>
				<exclude name="**/*.msi"/>
				<exclude name="**/*.msm"/>
				<exclude name="**/debug/**"/>
				<exclude name="**/release/**"/>

				<include name="**/**"/>
			</fileset>
		</copy>

		<!-- if we are not doing GPL, then we need to replace license text -->
		<if test="true" unless="${IsGPL}">
			<replacetext>
				<section fromfile="gpl-banner.txt" tofile="commercial-banner.txt"/>
				<files basedir="tmp">
					<include name="./**/*.cs"/>
				</files>
			</replacetext>
		</if>

		<zip zipfile="packages/mysql-connector-net-${version}${postfix}-src.zip">
			<fileset basedir="tmp">			
				<include name="**/**"/>
			</fileset>
		</zip>

		<delete dir="tmp" failonerror="false"/>
	</target>

	<target name="PackageZip">
		<zip zipfile="packages/mysql-connector-net-${version}${postfix}-noinstall.zip">
			<fileset basedir="mysql.data/provider/bin/net-2.0/release" prefix="bin">
				<include name="mysql.data.dll" />
			</fileset>
			<fileset basedir="Documentation/Output" prefix="Docs">
				<include name="*.chm" />
			</fileset>
			<fileset>
				<include name="CHANGES"/>
				<include name="Release Notes.txt"/>
				<include if="${IsGPL}" name="COPYING"/>
				<include if="${IsGPL}" name="EXCEPTIONS"/>
				<include unless="${IsGPL}" name="License.txt"/>
			</fileset>
			<fileset basedir="Samples" prefix="Samples">
				<include name="**/*"/>
				<exclude name="**/bin/**"/>
				<exclude name="**/obj/**"/>
			</fileset>
		</zip>
	</target>

    <!-- verification targets -->
	<target name="VerifyAll" depends="all">
		<property name="licenseFile" value="gpl-banner.txt"/>
		<property name="package" value="mysql-connector-net-${version}"/>
		<call target="VerifyPackage"/>
		
		<property name="licenseFile" value="commercial-banner.txt"/>
		<property name="package" value="mysql-connector-net-${version}-com"/>
		<call target="VerifyPackage"/>
	</target>
	
	<target name="VerifyPackage">
		<call target="VerifyInstaller"/>
		<call target="VerifyNonInstaller"/>
	</target>

	<target name="VerifyDirectory">
		<!-- now build for all frameworks -->
		<property name="debug" value="false"/>
		<nant buildfile="${build.dir}/Client.build" target="alltests"/>
		
		<!-- now verify that the files do not include wrong license text -->
		<foreach item="File" property="filename">
			<in>
				<items>
					<include name="packages\temp\src\**\*.cs"/>
					<include name="packages\temp\src\**\*.vb"/>
				</items>
			</in>
			<do>
				<checklicense filetocheck="${filename}" licensefile="${licenseFile}"/>
			</do>
		</foreach>
	</target>
	
	<target name="VerifyInstaller">
		<!-- first unzip the package into a temp dir and install it-->
		<unzip todir="packages/temp" zipfile="packages/${package}.zip"/>		
		<exec program="msiexec" commandline="/i ${nant.project.basedir}\packages\temp\MySql.Data.msi /norestart /quiet InstallMode=Complete SetInstallLevel=1000 TARGETDIR=${nant.project.basedir}\packages\temp" />
		
		<property name="build.dir" value="packages/temp/src" />
		<call target="VerifyDirectory"/>
		
		<!-- now uninstall the package and delete the directory-->
		<exec program="msiexec" commandline="/x ${nant.project.basedir}\packages\temp\MySql.Data.msi /norestart /quiet"/>
		<delete dir="packages/temp" failonerror="false"/>
	</target>
	
	<target name="VerifyNonInstaller">
		<!-- first unzip the package into a temp dir -->
		<unzip todir="packages/temp" zipfile="packages/${package}-noinstall.zip"/>		
		<property name="build.dir" value="packages/temp" />
		<call target="VerifyDirectory"/>
		<delete dir="packages/temp" failonerror="false"/>
	</target>

    
    
</project>
