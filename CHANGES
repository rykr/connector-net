Version 5.1.3 - 
  - Fixed problem with using a stored procedure that takes a parameter as a select routine
    for a TableAdapter wizard. (Bug #29098)
  - Fixed problem with creating users using hashed passwords when machineKey is set
    to AutoGenerate.  We now correctly throw an exception if you are requesting
    encrypted passwords but it works ok for hashed passwords. (Bug #29235)
  - Fixed problem with selecting users for roles in the web admin tool.  The problem was that
    we had a simple syntax error in our database lookup code. (Bug #29236)
    
Version 5.1.2 - 6/12/2007
  - Fixed integration with the Website Administration Tool.  Before this fix, the test link
    was visible but did not work and  user management did not work.
  - Reintroduced code to properly return field values as byte[] when the binary flag is present.
    (See release notes)    
  - Fixed problem preventing the DataSet Designer or TableAdapter wizard from being
    able to generate insert, update, and delete statements. (Bug #26347)    
  - Fixed problem preventing use of stored procedures for insert, update, and
    delete statements in a table adapter.    
  - Fixed problem where text columns would not appear in the Visual Studio query builder (Bug #28437)	
	    
Version 5.1.1
  - Fixed password property on MySqlConnectionStringBuilder to use PasswordPropertyText 
    attribute.  This causes dots to show instead of actual password text.
  - Fixed problem with pooling on the compact framework.  It should work now.    
  - Install now calls VS setup only when VS integration is selected. (bug #28260)
  - MySqlRoleProvider.GetRolesForUser now works correctly (bug #28251)
  - Installer now adds a default connection string to machine.config.  This will prevent errors related to a missing 
    connection string.  You will need to override this value in your web.config files.    
  - Changed installer to only give option to install Visual Studio integration if Visual Studio 8 is installed

Version 5.1.0 - 5/1/2007

  - Added Membership and Role provider contributed by Sean Wright (thanks!)
  - Now compiles for .NET CF 2.0
  - Rewrote stored procedure parsing code using a new SQL tokenizer.  Really nasty
    procedures including nested comments are now supported.
  - GetSchema will now report objects relative to the currently selected database.
    What this means is that passing in null as a database restriction will report
    objects on the currently selected database only.
    
Version 5.0.8
  Bug #28706 Log messages are truncated  
  - Fixed a problem with compression over a network.  We were letting the inflate stream read
    directly from the network stream.  Under certain situations, two bytes were being left unread
    and this messed up our byte counts.  Now we are using a WeakReference to an internal buffer
    that we read the compressed data into before inflating. (Bug #28204)  
  - Fixed problem where we were not closing prepared statement handles
    when commands are disposed.
  - Fixed problem where any attempt to not read all the records returned
    from a select where each row of the select is greater than 1024 bytes
    would hang the driver.
  - Fixed problem where usage advisor warnings for unnecessary field conversions
    and not reading all rows of a resultset would output even if you
    did not request usage advisor warnings. (Bug #29124)
  - Changed behavior of ConnectionString property.  It now only returns the connection
    string given to it.  It will not attempt to track changes to the current
    database when the users uses the ChangeDatabase method. (Bug #29123)
    
Version 5.0.7 5/16/2007

  Bugs fixed
  ----------
  Bug #27269 MySqlConnection.Clone does not mimic SqlConnection.Clone behaviour 
  Bug #27289 Transaction is not rolledback when connection close 
  Bug #26147 "User Id" problem during connection creation 
  Bug #27240 Property value characterset not retrieved/fetched in conn wizard 
  Bug #25947 CreateFormat/CreateParameters Column of DataTypes collection incorrect for CHAR 
  Bug #27765 Logging does not work
  Bug #27679 MySqlCommandBuilder.DeriveParameters ignores UNSIGNED flag
  Bug #27668 FillSchema and Stored Proc with an out parameter
  Bug #28167 Poor performance building connection string (thanks Maxim!)
  Bug #26041 Connection Protocol Property Error in PropertyGrid Control
  Bug #26754 EnlistTransaction throws false MySqlExeption "Already enlisted"
  Bug #23342 Incorrect parsing of Datetime object for MySQL versions below 4.1
  
  Other changes
  -------------
  Installer now works if XML comments are found in machine.config
  GetSchema will now attempt to unquote identifiers passed in as restrictions
  The MySqlCommand object now properly clones the CommandType and CommandTimeout properties  
  
Version 5.0.6 3/21/2007

  Bugs fixed
  ----------
  Bug #27135 MySqlParameterCollection and parameters added with Insert Method 
  Bug #27253 Installer : Company info is different 
  Bug #27187 cmd.Parameters.RemoveAt("Id") will cause an error if the last item is requested   
  Bug #27093 Exception when using large values in IN UInt64 parameters 
  Bug #27221 describe SQL command returns all byte array on MySQL versions older than 4.1.15 
  Bug #26960 Connector .NET 5.0.5 / Visual Studio Plugin 1.1.2 
  
Version 5.0.5 3/5/2007

  Bugs fixed
  ----------
  Bug #25605 BINARY and VARBINARY is returned as a string 
  Bug #25569 UpdateRowSource.FirstReturnedRecord does not work 

Version 5.0.4 *unreleased*

  Bugs fixed
  ----------
  Bug #25443 ExecuteScalar() hangs when more than one bad result 
  Bug #24802 Error Handling 
  Bug #25614 After connection is closed, and opened again UTF-8 characters are not read well 
  Bug #25625 Crashes when calling with CommandType set to StoredProcedure 
  Bug #25458 Opening connection hangs 
  Bug #25651 SELECT does not work properly when WHERE contains UTF-8 characters   
  Bug #25726 MySqlConnection throws NullReferenceException and ArgumentNullException 
  Bug #25609 MySqlDataAdapter.FillSchema 
  Bug #25928 Invalid Registry Entries 
  Bug #25912 selecting negative time values gets wrong results 
  Bug #25906 Typo makes GetSchema with DataTypes collection throw an exception   
  Bug #25907 DataType Column of DataTypes collection does'nt contain the correct CLR Datatype   
  Bug #25950 DataSourceInformation collection contains incorrect values 
  Bug #26430 Will not install under Vista   
  Bug #26152 Opening a connection is really slow 
  Bug #24373 High CPU utilization when no idle connection 
  Bug #24957 MySql.Data.Types.MySqlConversionException is not marked as Serializable. 
  Bug #25603 Critial ConnectionPool Error in Connector.Net 5.03 
  Bug #26660 MySqlConnection.GetSchema fails with NullReferenceException for Foreign Keys 

  Other changes
  -------------
  Return parameters created with DeriveParameters now have the name RETURN_VALUE
  Fixed problem with parameter name hashing where the hashes were not getting updated
       or removed in certain situations.
  Fixed problem with calling stored functions when a return parameter was not given
  Fixed problem that prevented use of SchemaOnly or SingleRow command behaviors with
       sprocs or prepared statements
  Assembly now properly appears in the Visual Studio 2005 Add/Remove Reference dialog
  Added MySqlParameterCollection.AddWithValue and marked the Add(name, value) method as obsolete
  Added "Use Procedure Bodies" connection string option to allow calling procedures without
       using procedure metadata (if possible).
  Reverted behavior that required parameter names to start with the parameter marker.  We 
       apologize for this back and forth but we mistakenly changed the behavior to not
       match what SqlClient supports.  We now support using either syntax for adding
       parameters however we also respond exactly like SqlClient in that if you ask for the
       index of a parameter using a syntax different than you added the parameter, the result
       will be -1.
  
Version 5.0.3 12-31-2006

  Bugs fixed
  ----------
  Bug #23687 Deleting a connection to a disconnected server causes a failed assertion 
  Bug #24565 Inferring DbType fails when reusing commands and the first time the value is nul 
  Bug #24661 mysql-connector-net-5.0.2-beta Driver.IsTooOld() Error.... 
  Bug #23905 Stored procedure usages is not thread safe 
  Bug #25033 Exception raised/ HANG if no SELECT privileges granted for stored procedure call 
      [this is a correction;  a previous change log entry indicated that Connector/Net
       no longer required select privs on mysql database.  This is not true and select privs
       are required. This will be fixed when the server exposes procedure parameters via
       information schema.]
  Bug #25013 Return Value parameter not found 
  Bug #25151 Reading from the stream has failed Exception in MySQL Connector 5.0.2 
  Bug #22400 Nested transactions 

  Other changes
  -------------
  SSL now working.  [Thanks Alessandro Muzzetta]
  Fixed ViewColumns GetSchema collection
  Improved CommandBuilder.DeriveParameters to use the procedure cache if possible

Version 5.0.2 11-3-2006

  Bugs fixed
  ----------
  Bug #23268 System.FormatException when invoking procedure with ENUM input parameter 	
  Bug #23538 Exception thrown when GetSchemaTable is called and "fields" is null. 
  Bug #23245 Connector Net 5.01 Beta Installer produces Antivirus Error Message 
  Bug #23758 Unable to connect to any server - IPv6 related 
  Bug #22882 Registry key 'Global' access denied 
  Bug #18186 Problem with implementation of PreparedStatement  
  Bug #23657 Column names with accented characters were not parsed properly causing malformed column names in result sets.
  Bug #16126 Connector/NET did not work as a data source for the SqlDataSource object used by ASP.NET 2.0.
 
  Other changes
  -------------
  Increased speed of MySqlParameterCollection.IndexOf(string) orders of magnitude
  (parameter name lookups are now strict on use of parameter marker)
  Improved character set mappings
  Turned MySqlPoolManager into a static class and added a static ctor to
    avoid any race conditions related to initializing the hashtable.
    (A similar suggestion came in from a user)
  Added 'Ignore Prepare' connection string option for disabling prepared
    statements application-wide
  Added Installer class to provide custom install type procedures such as modifying
    machine.config
  A nicer exception is displayed if you have added a parameter without the parameter marker.
  Load Data Local InFile is working again         
         
Version 5.0.1 (Beta)

  Bugs fixed
  ----------
  Bug #21521 # Symbols not allowed in column/table names.    
  Bug #21874 MySqlException should derive from DbException         
  Bug #22042 mysql-connector-net-5.0.0-alpha BeginTransaction
  Bug #22452 MySql.Data.MySqlClient.MySqlException: 	 

  Other changes
  -------------
  Implemented simple local transactions
  Added overloaded methods in MySqlDataReader for getting a column value right from column name
  Replaced use of .NET 2.0 compression code with open source zlib library
  Fixed compression
  Fixed some problems with GetSchema and the Indexes and IndexColumns collections
  Fixed shared memory connections
  Implemented command canceling for MySQL 5.0.0 and higher
  Fixed problem with executing a Fill after a FillSchema
  Implemented CommandTimeout for non-batch queries
  Fixed socket create code related to IPv6 (thanks Mark!)
  Added foreign key support to GetSchema
  Fixed installer to add assembly to GAC and machine.config
    
Version 5.0.1 (Alpha)

  Bugs fixed
  ----------
  Bug #6214  	CommandText: Question mark in comment line is being parsed as a parameter [fixed]

  Other changes
  -------------
  Implemented Usage Advisor
  Added Async query methods
  Reimplemented PacketReader/PacketWriter support into MySqlStream class
  Added internal implemention of SHA1 so we don't have to distribute the OpenNetCF on mobile devices    	
  Added usage advisor warnings for requesting column values by the wrong type
  Reworked connection string classes to be simpler and faster
  Added procedure metadata caching
  Added perfmon hooks for stored procedure cache hits and misses    	
  Implemented MySqlConnectionBuilder class
  Implemented MySqlClientFactory class
  Implemented classes and interfaces for ADO.Net 2.0 support
  Replaced use of ICSharpCode with .NET 2.0 internal deflate support
  Refactored test suite to test all protocols in a single pass
  Completely refactored how column values are handled to avoid boxing in some cases
    	
Version 1.0.8 

  Other changes
  -------------
  Implemented a stored procedure cache
  Changed how stored procedure metadata is retrieved to allow users without select privs
    on mysql.proc to use them

  Bugs fixed or addressed
  -----------------------
  Bug #16659 Can't use double quotation marks(") as password access server by Connector/NET [fixed]
  Bug #17375 CommandBuilder ignores Unsigned flag at Parameter creation [fixed]
  Bug #17749 There is no char type in MySqlDbType [fixed]
  Bug #16788 Only byte arrays and strings can be serialized by MySqlBinary [fixed]
  Bug #16645 FOUND_ROWS() Bug [can't repeat - added test case]
  Bug #18570 Unsigned tinyint (NET byte) incorrectly determined param type from param val	[fixed]
  Bug #19261 Supplying Input Parameters [fixed]
  Bug #19481 Where clause with datetime throws exception [any warning causes the exception] [fixed]
  Bug #15077 Error MySqlCommandBuilder.DeriveParameters for sp without parameters. [fixed]
  Bug #16934 Unsigned values > 2^63 (UInt64) cannot be used in prepared statements
  Bug #19515 DiscoverParameters fails on numeric datatype [fixed]
  Bug #17814 Stored procedure fails unless DbType set explicitly [fixed]
  Bug #19294 IDataRecord.GetString method should return null for null values [fixed]
  Bug #13590 ExecuteScalar returns only Int64 regardless of actual SQL type [added test case]
  Bug #19017 GetBytes Error [fixed]
  Bug #19936 DataReader already open exception [fixed]
  Bug #17106 MySql.Data.MySqlClient.CharSetMap.GetEncoding thread synchronization issue [fixed]
  Bug #17736 Selecting a row with with empty date '0000-00-00' results in Read() hanging. [fixed]
  Bug #20581 Null Reference Exception when closing reader after stored procedure. 
  Bug #16884 Invalid DateTime Values from DataReader     
  Bug #7248  There is already an open DataReader associated with this Connection which must 
  Bug #22400 Nested transactions     
  Bug #11991 ExecuteScalar 	
  Bug #14592 Wrong column length returned for VARCHAR UTF8 columns 
  Bug #18391 Better error handling for the .NET class "MySqlCommand" needed. 	
  Bug #8131 Data Adapter doesn't close connection 
  Bug #9619 Cannot update row using DbDataAdapter when row contains an invalid date 
  Bug #15112 MySqlDateTime Constructor 
	
Version 1.0.7

  Bugs fixed or addressed
  -------------------------
  Bug #13658 connection.state does not update on Ping() [ fixed ]
  Bug #13590 ExecuteScalar returns only Int64 regardless of actual SQL type [added test case]
  Bug #13662 Prepare() truncates accented character input [already fixed, added test]
  Bug #11947 MySQLCommandBuilder mishandling CONCAT() aliased column [updated test case]
  Bug #13541 Prepare breaks if a parameter is used more than once [fixed]
  Bug #13632 the MySQLCommandBuilder.deriveparameters has not been updated for MySQL 5
  Bug #13753 Exception calling stored procedure with special characters in parameters
  Bug #11386 Numeric parameters with Precision and Scale not taken into account by Connector [added test case]
  Bug #6902  Errors in parsing stored procedure parameters [fixed before, refixed]
  Bug #13927 Multiple Records to same Table in Transaction Problem [fixed]
  Bug #14631 "#42000Query was empty" [fixed]
  Bug #13806 Does not support Code Page 932	

  Other changes
  -------------------------    
  Failure to provide parameters for out and inout values is now detected
  Changed pooling code to remove issue of skipping Ping() on bogus connnections
    
Version 1.0.6
 
  Bugs fixed or addressed
  -------------------------
  Bug #13036  Returns error when field names contain any of the following chars %<>()/ etc [fixed]
  Bug #12835	1.0.5 won't install on system with 1.0.4 installed [fixed]
  Bug #12978 	Fatal Error C# Compilation [fixed]
  Bug #13276 	Exception on serialize after inserting null value [fixed]
  Bug #13345 	Connecting from mono 1.1.8 to MySQL 5.0 using MySQL Connector/Net 1.0.5

  Other changes
  -------------------------
  Changed SocketStream and StreamCreator to be compatible with Mono
  Added options to not reset and reconfigure connections pulled from the pool
  Connections pulled from the pool that are not reset are also not pinged

Version 1.0.5

	Bugs fixed or addressed
	-------------------------
	Bug #8667  	OUT parameters are not being valued [fixed]
	Bug #8574  	MySQLCommandBuilder unable to support inline functions [fixed]
	Bug #8509  	MySqlDataAdapter.FillSchema does not interpret unsigned integer	[fixed]
	Bug #8630  	Executing a query with the SchemaOnly option reads the entire resultset	[fixed]
	Bug #7398  	MySqlParameterCollection doesn't allow parameters without filled in names [fixed]
	Bug #7623  	Adding MySqlParameter causes error if MySqlDbType is Decimal [fixed]
	Bug #8929  	Timestamp values with a date > 10/29/9997 cause problems [fixed]
	Bug #9237  	MySqlDataReader.AffectedRecords not set to -1 [fixed]
	Bug #9262  	Floating point numbers boundary conditions (MinValue/MaxValue)
				(added code but really this isn't a bug)
	Bug #7951   Error reading a timestamp column 				
	Bug #10644  Cannot call a stored function directly from Connector/Net 	
	Bug #9722   Connector does not recognize parameters separated by a linefeed 
	Bug #10281  Clone issue with MySqlConnection 
	Bug #11450  Connector/Net, current database and stored procedures
	Bug
